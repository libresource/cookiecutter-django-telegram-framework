volumes:
  static:

services:
  pg:
    image: postgres:latest
    ports:
      - 5432:5432
#    volumes:
#      - db-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 3s
      retries: 6
  backend:
    image: {{cookiecutter.dockerhub_username}}/{{cookiecutter.dockerhub_backend_image}}
    build:
      context: .
    expose:
      - 8080
    volumes:
      - static:/static/
    env_file:
      - .env
    command: ./entrypoint.sh
    depends_on:
      pg:
        condition: service_healthy
  nginx:
    image: {{cookiecutter.dockerhub_username}}/{{cookiecutter.dockerhub_nginx_image}}
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - static:/etc/nginx/static/
    depends_on:
      - backend

  telegram_bot:
    build:
      context: .
    image: {{cookiecutter.dockerhub_username}}/{{cookiecutter.dockerhub_backend_image}}
    env_file:
      - .env
    command: bash -c "
      make run_bot
      "
    depends_on:
      pg:
        condition: service_healthy
